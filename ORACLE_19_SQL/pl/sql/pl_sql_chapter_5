

--chapter  5 pl/sql 
-- pl/sql এর মধ্যে sql statement ব্যবহার করা ।
 

--  use DML statement in pl/sql 
-- 1. select statement in pl/sql


set serveroutput on 
declare
v_fname varchar2(50);
begin
-- sql statement start
select first_name into v_fname 
from employees 
where employee_id=200;
-- sql statement end
DBMS_OUTPUT.PUT_LINE(v_fname);
end;
/

set serveroutput on
declare
begin
DBMS_OUTPUT.PUT_LINE();
end;
/
print 


declare
v_hireDate employees.hire_date%TYPE;
v_salary employees.salary%TYPE;
begin
select hire_date,salary 
into v_hireDate ,v_salary
from employees 
where employee_id=100;
DBMS_OUTPUT.PUT_LINE(v_hireDate);
DBMS_OUTPUT.PUT_LINE(v_salary);
end;
/


set serveroutput on
declare
v_sum_salary number(9,2);
v_deptno number not null := 90;
begin
select sum(salary)
into v_sum_salary 
from employees
where department_id=v_deptno;
DBMS_OUTPUT.PUT_LINE(v_sum_salary);
end;
/


-- insert statement 

declare
begin
insert 
into employees
(employee_id,first_name,last_name,email,
hire_date,job_id,salary)
values(employees_seq.NEXTVAL,'Biplob','Islam','mdbiplob798@gmail.com',sysdate,'IT_PROG',360000);
-- DBMS_OUTPUT.PUT_LINE();
end;
/


-- UPDATE statement

DECLARE
v_sal_increse employees.salary%TYPE := 25000;
BEGIN
update employees
set salary=salary+v_sal_increse
where job_id = 'IT_PROG';
DBMS_OUTPUT.PUT_LINE(v_sal_increse);
END;
/


-- DELETE statement

DECLARE
v_emp_id employees.employee_id%TYPE :=100;
BEGIN
delete  employees
where employee_id=v_emp_id;
END;
/

-- merge statement 
create table copy_emp 
as(
    select * 
    from employees
    where department_id 
    in(20,50,70)
    );

BEGIN
MERGE INTO copy_emp c 
        using employees e 
        on (e.employee_id =c.employee_id)
      WHEN MATCHED THEN
        UPDATE SET 
            c.first_name =e.first_name,
            c.last_name =e.last_name,
            c.email =e.email
        WHEN NOT MATCHED THEN
        INSERT VALUES(e.employee_id,
        e.first_name,
        e.last_name,
        e.email,
        e.phone_number,
        e.hire_date,
        e.job_id,
        e.salary,
        e.commission_pct,
        e.manager_id,
        e.department_id);  
END;
/


-- sql cursor 

-- 1.implicit cursor
    -- a)sql%found
    -- b)sql%notfound
    -- c)sql%rowcount
-- 2.explicit cursor
    -- user create cursor 


-- implicit cursor :

create table dept_temp as select * from departments;

select * from dept_temp where department_id=270;

-- SQL%FOUND
DECLARE
v_dept_no departments.department_id%TYPE :=270;
BEGIN
    DELETE FROM dept_temp where department_id=v_dept_no;
    if SQL%FOUND THEN
    INSERT INTO  dept_temp VALUES(270,'SQL%FOUND', 200,1700);
    END IF;
END;
/
SELECT * FROM dept_temp
WHERE DEPARTMENT_ID=270;

SELECT * FROM dept_temp
WHERE DEPARTMENT_ID=770;

DECLARE
v_dept_no departments.department_id%TYPE :=770;
BEGIN
    DELETE FROM dept_temp where department_id=v_dept_no;
    if SQL%FOUND THEN
    INSERT INTO  dept_temp VALUES(770,'SQL%FOUND', 200,1700);
    END IF;
END;
/

-- SQL%NOTFOUND

SELECT * FROM dept_temp
WHERE DEPARTMENT_ID=770;


DECLARE
v_dept_no departments.department_id%TYPE :=770;
BEGIN
    DELETE FROM dept_temp where department_id=v_dept_no;
    if SQL%NOTFOUND THEN
    INSERT INTO  dept_temp VALUES(770,'SQL%FOUND', 200,1700);
    END IF;
END;
/

-- SQL%ROWCOUNT


SELECT * FROM dept_temp
WHERE DEPARTMENT_ID=770;

DECLARE
    v_rows_deleted varchar2(50);
     v_job_id copy_emp.job_id%type := 'IT_PROG';
BEGIN
    DELETE FROM copy_emp
    WHERE job_id =v_job_id;
    v_rows_deleted :=(SQL%ROWCOUNT || 'row delete');
    DBMS_OUTPUT.PUT_LINE(v_rows_deleted);
END;
/



