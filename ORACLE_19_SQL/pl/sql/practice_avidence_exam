-- chapter__5

declare
v_max_deptno number;

begin
select max(department_id) into v_max_deptno from departments;
dbms_output.put_line('The maximun department_id is : '|| v_max_deptno);
end;
/



declare
v_max_deptno number;
v_dept_name departments.department_name%type := 'Education';
v_dept_id number;
begin
select max(department_id) into v_max_deptno from departments;
dbms_output.put_line('The maximun department_id is : '|| v_max_deptno);
insert into departments(department_name,department_id,location_id)
values(v_dept_name,(v_max_deptno+10),null);
dbms_output.put_line(sql%rowcount || '-'||'sql%rowcount');
end;
/




declare
v_location_id number :=3000;
v_department_id number :=560;
begin
update departments
set location_id=v_location_id
where department_id =560;
end;
/
select * from departments where department_id =560;



begin
delete from departments
where department_id=560;
dbms_output.put_line(sql%rowcount || ' ' || 'rows deleted.');
end;
/





-- chapter__6

begin
for i in 1..10
loop
if
i=6 or i=8 then
null;
else
dbms_output.put_line(i);
end if;
end loop ;
end;
/





create table emp as select * from employees;
alter table emp
add stars varchar2(100);




declare
v_empno emp.employee_id%type :=176;
v_asterisk emp.stars%type;
v_sal emp.salary%type;
begin
select round(nvl(salary/1000,0)) into v_sal from emp
where employee_id=v_empno;
for i in 1..v_sal
loop
v_asterisk:=v_asterisk||'*';
end loop;
update emp
set stars =v_asterisk
where employee_id=v_empno;
end;
/


declare
v_empno emp.employee_id%type :=176;
v_asterisk emp.stars%type :=null;
v_sal emp.salary%type;
begin
select round(nvl(salary/1000,0)) into v_sal from emp
where employee_id=v_empno;
for i in 1..v_sal
loop
v_asterisk := v_asterisk || '*';
update emp
set stars =v_asterisk
where employee_id=v_empno;
end loop;
end;
/


declare
v_empno emp.employee_id%type :=176;
v_asterisk emp.stars%type :=null;
v_sal emp.salary%type;
begin
select round(nvl(salary/1000,0)) into v_sal from emp
where employee_id=v_empno;
for i in 1..v_sal
loop
v_asterisk := v_asterisk || '*';
update emp
set stars =v_asterisk;
end loop;
end;
/


declare
v_empno emp.employee_id%type :=176;
v_sal emp.salary%type;
v_asterisk emp.stars%type :=null;
begin
select round(nvl(salary/1000,0)) into v_sal from employees
where employee_id =v_empno;
for i in 1..v_sal
loop
v_asterisk := v_asterisk || '*';
update emp
set stars=v_asterisk
where employee_id=v_empno;
end loop;
end;
/



declare
v_empno emp.employee_id%type :=176;
v_sal emp.salary%type;
v_asterisk emp.stars%type :=null;

begin
select round(nvl(salary/1000,0)) into v_sal from emp
where employee_id=v_empno;
for i in 1..v_sal
loop
v_asterisk := v_asterisk||'*';
update emp 
set stars =v_asterisk
where employee_id =v_empno;
end loop;
end;
/


















declare
v_empno emp.employee_id%type :=176;
v_sal emp.salary%type;
begin
select round(salary/1000) into v_sal from emp
where employee_id =v_empno;
dbms_output.put_line('salary : ' || v_sal);
update emp 
set stars=rpad('*',v_sal,'*')
where employee_id=v_empno;
end;
/





















select stars from emp 
where employee_id =176;
















create table messages (results number);
begin
for i in 1..10
LOOP
if i = 6 or i=8 
then 
null;
else
insert into messages(results)
values(i);
end if;
end loop;
end;
/



begin
for i in 11..20 
loop
if i=12 or i=16 then
null;
else
insert into messages(results)
values(i);
end if;
end loop;
end;
/




begin
for i in 1..10
loop
if i= 6 or i =8 then
null;
else
insert into messages(results)
values(i);
end if;
end loop;
end;
/


create table emp as select * from employees;

alter table emp
add stars varchar2(50);

declare
v_empno emp.employee_id%type :=176;
v_asterisk emp.stars%type;
v_sal emp.salary%type;

begin
select round(nvl(salary/1000,0)) into v_sal from emp
where employee_id=v_empno;
for i in 1..v_sal
loop
v_asterisk:=v_asterisk||'*';
end loop;
update emp
set stars =v_asterisk
where employee_id=v_empno;
end;
/




declare
v_empno emp.employee_id%type :=176;
v_sal emp.salary%type;
begin
select round(salary/1000) into v_sal from emp
where employee_id =v_empno;
dbms_output.put_line('salary : ' || v_sal);
update emp 
set stars=rpad('*',v_sal,'*')
where employee_id=v_empno;
end;
/

declare
v_empno emp.employee_id%type :=150;
v_asterisk emp.stars%type :=null;
v_sal emp.salary%type;
begin
select round(salary/1000) into v_sal from emp
where employee_id=v_empno;
for i in 1.. v_sal
loop
v_asterisk:=v_asterisk||'*';
end loop;
update emp
set stars = v_asterisk
where employee_id=v_empno;
end;
/



declare
  v_empno     emp.employee_id%type := 166;
  v_sal       emp.salary%type;
begin
  select round(nvl(salary/1000,0)) into v_sal
  from emp
  where employee_id = v_empno;
  update emp
  set stars = rpad('*', v_sal, '*')
  where employee_id = v_empno;
end;
/


-- chapter__8


declare
v_deptno number :=10;
cursor c_emp_cursor is
select last_name,salary,manager_id
from employees
where department_id =v_deptno;

begin
for i in c_emp_cursor 
loop
if 
i.salary<5000 and i.manager_id in(101,124)
then
dbms_output.put_line(i.last_name || ' '|| 'Due for a raise.');
else
dbms_output.put_line(i.last_name || ' '|| 'Not Due for a raise.');
end if;
end loop;
end;
/


declare
cursor c_emp_cursor (v_deptno number)is
select last_name,salary,manager_id
from employees
where department_id =v_deptno;

begin
for i in c_emp_cursor(80) 
loop
if 
i.salary<5000 and i.manager_id in(101,124)
then
dbms_output.put_line(i.last_name || ' '|| 'Due for a raise.');
else
dbms_output.put_line(i.last_name || ' '|| 'Not Due for a raise.');
end if;
end loop;
end;
/


declare
cursor c_dept_cursor is
select department_id,department_name from departments
where department_id <100
order by department_id;
cursor c_emp_cursor (p_deptno number) is
select last_name,job_id,hire_date,salary from employees 
where department_id <120;
v_deptno departments.department_id%type;
v_ndept departments.department_name%type;
v_lname employees.last_name%type;
v_job_id employees.job_id%type;
v_hiredate employees.hire_date%type;
v_salary employees.salary%type;
begin
open c_dept_cursor;
loop
fetch c_dept_cursor into v_deptno,v_ndept;
exit when c_dept_cursor%notfound;
dbms_output.put_line('Department id is :' ||v_deptno);
dbms_output.put_line('Department name is :' ||v_ndept);
end loop;
close c_dept_cursor;
open c_emp_cursor (50);
loop
fetch c_emp_cursor into v_lname,v_job_id,v_hiredate,v_salary;
exit when c_emp_cursor%notfound;
dbms_output.put_line('Employee last_name is :'|| v_lname);
dbms_output.put_line('Employee job_id is :'|| v_job_id);
dbms_output.put_line('Employee hiredate is :'|| v_hiredate);
dbms_output.put_line('Employee salary is :'|| v_salary);
end loop;
close c_emp_cursor;
end;


/
declare
cursor c_dept_cursor is
select department_id,department_name from departments
where department_id <100
order by department_id;
cursor c_emp_cursor (p_deptno number) is
select last_name,job_id,hire_date,salary from employees 
where department_id <120;
begin
for i in c_dept_cursor
loop
dbms_output.put_line('Department id is :' ||i.department_id);
dbms_output.put_line('Department name is :' ||i.department_name);
end loop;
for i in c_emp_cursor(50)
loop
dbms_output.put_line('Employee last_name is :'|| i.last_name);
dbms_output.put_line('Employee job_id is :'|| i.job_id);
dbms_output.put_line('Employee hiredate is :'|| i.hire_date);
dbms_output.put_line('Employee salary is :'|| i.salary);
end loop;
end;
/



create table top_salaries(salary number);

declare
v_num number :=5;
v_sal employees.salary%type;
cursor c_emp_cursor is
select distinct salary from employees
order by salary desc;
begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_sal;
insert into top_salaries(salary)
values(v_sal);
dbms_output.put_line(v_sal);
exit when c_emp_cursor%rowcount>v_num and c_emp_cursor%found;
dbms_output.put_line(v_sal);
end loop;
close c_emp_cursor;
end;
/

declare
v_num number :=5;
v_sal employees.salary%type;
cursor c_emp_cursor is
select distinct salary from employees
order by salary desc;
begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_sal;

dbms_output.put_line(v_sal);
exit when c_emp_cursor%rowcount>v_num+1 and c_emp_cursor%found;
insert into top_salaries(salary)
values(v_sal);
dbms_output.put_line(v_sal);
end loop;
close c_emp_cursor;
end;
/

-- chapter__9 
drop table messages;
create table messages(reasults varchar2(100));



declare
v_ename employees.last_name%type;
v_emp_sal employees.salary%type :=6000;

begin
select last_name into v_ename from employees
where salary =v_emp_sal;

insert into messages (reasults)
values(v_ename || '' || v_emp_sal);
dbms_output.put_line(v_ename || v_emp_sal);
exception
when no_data_found then
dbms_output.put_line('No employee with a salary of :'||v_emp_sal);
when too_many_rows then
dbms_output.put_line('More than one rows employee with a salary of :'||v_emp_sal);
when others then
dbms_output.put_line('Some other error occurred');
end;
/





declare
e_childrecord_exists exception;
pragma exception_init(e_childrecord_exists,-02292);
begin
delete from departments 
where department_id=40;
dbms_output.put_line('Deleting department 40..........');
exception
when e_childrecord_exists then
dbms_output.put_line('Cannot delete this department.There are employees in this department (child records exist).');
end;
/

























































declare
v_deptno number :=30;
cursor c_emp_cursor is
select last_name,salary,manager_id
from employees
where department_id=v_deptno;
begin
for v_record in c_emp_cursor
loop
if v_record.salary<5000 and v_record.manager_id in(101,124)
then
dbms_output.put_line(v_record.last_name ||' - ' || 'Due for a raise');
else

dbms_output.put_line(v_record.last_name ||' - ' || 'Not Due for a raise');
end if;
end loop;
end;
/


declare
v_num number :=10;
v_sal employees.salary%type;
cursor c_emp_cursor is
select salary from employees
order by salary desc;

begin
open c_emp_cursor;
loop
FETCH c_emp_cursor into v_sal;
EXIT when c_emp_cursor%ROWCOUNT<=v_num and c_emp_cursor%found;
insert into top_salaries (salary)
values(v_sal);
end loop;
CLOSE c_emp_cursor;
end;
/





create table t_sal (salary number);

declare
v_n number :=10;
v_sal employees.salary%type;
cursor c_emp_cursor is
select salary from employees
order by salary desc;

begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_sal;
EXIT when c_emp_cursor%ROWCOUNT >=v_n;
dbms_output.put_line(v_sal);
end loop;
close c_emp_cursor;
end;
/


declare
v_n number :=5;
v_sal employees.salary%type;
cursor c_emp_cursor is
select salary from employees
order by salary desc;

begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_sal;
dbms_output.put_line(v_sal);
insert into t_sal(salary)
values(v_sal);
EXIT when c_emp_cursor%ROWCOUNT >=v_n and c_emp_cursor%found;
end loop;
close c_emp_cursor;
end;
/

declare
v_n number :=5;
v_sal employees.salary%type;
cursor c_emp_cursor is
select salary from employees
order by salary desc;

begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_sal;
dbms_output.put_line(v_sal);

EXIT when c_emp_cursor%ROWCOUNT >=v_n and c_emp_cursor%found;
insert into t_sal(salary)
values(v_sal);
end loop;
close c_emp_cursor;
end;
/


-- chapter__9
drop table messages;
alter table messages modify results varchar2(200);

declare
v_ename employees.last_name%type;
v_emp_sal employees.salary%type :=6000;
begin
select last_name into v_ename from employees
where salary=v_emp_sal;
insert into messages(results)
values(v_ename || ' - ' || to_char(v_emp_sal));
exception
when no_data_found then
insert into messages(results)
values('No employee with a salary of ' || to_char(v_emp_sal));
when too_many_rows then
insert into messages(results)
values('More than one empployee with a salary of '||to_char(v_emp_sal));
when others then
insert into messages(results)
values('Some other error occurred ');
end;
/
select last_name from employees where salary=6000;--1 jon ase.


declare
v_ename employees.last_name%type;
v_emp_sal employees.salary%type :=7000;
begin
select last_name into v_ename from employees
where salary=v_emp_sal;
insert into messages(results)
values(v_ename || ' - ' || to_char(v_emp_sal));
exception
when no_data_found then
insert into messages(results)
values('No employee with a salary of ' || to_char(v_emp_sal));
when too_many_rows then
insert into messages(results)
values('More than one empployee with a salary of '||to_char(v_emp_sal));
when others then
insert into messages(results)
values('Some other error occurred ');
end;
/
select last_name from employees where salary=7000;--3 jon ase.




declare
v_ename employees.last_name%type;
v_emp_sal employees.salary%type :=2000;
begin
select last_name into v_ename from employees
where salary=v_emp_sal;
insert into messages(results)
values(v_ename || ' - ' || (v_emp_sal));
exception
when no_data_found then
insert into messages(results)
values('No employee with a salary of ' || (v_emp_sal));
when too_many_rows then
insert into messages(results)
values('More than one empployee with a salary of '||(v_emp_sal));
when others then
insert into messages(results)
values('Some other error occurred ');
end;
/

select last_name from employees where salary=2000;--0 jon ase.






create table messages2 (results varchar2(100));


declare
v_ename employees.last_name%type;
v_emp_sal employees.salary%type :=6000;

begin

select last_name into v_ename from employees 
where salary =v_emp_sal;
insert into messages2(results)
values (v_ename||'-'||v_emp_sal);
exception
when no_data_found then
insert into messages2(results)
values ('No employee with a salary of :'||v_emp_sal);
when too_many_rows then
insert into messages2(results)
values ('More than one employee with a salary of :'||v_emp_sal);
when others then
insert into messages2(results)
values ('Some other error occurred');
end;
/


declare
e_childrecord_exists exception;
pragma exception_init(e_childrecord_exists,-02292);
begin
delete from departments
where department_id=40;
dbms_output.put_line('Deleting department_id: 40 .......');
exception
when e_childrecord_exists then
dbms_output.put_line('Cannot delete this department.There are employees in this department (child recorde exist.)');
end;
/




declare
e_childrecord_exists exception;
pragma exception_init(e_childrecord_exists,-02292);
begin
delete from departments
where department_id=40;
dbms_output.put_line('Deleting department 40.......');
exception
when e_childrecord_exists then
dbms_output.put_line('Cannot delete this department.There are employees in this department (child records exist.)');
end;
/






































-- sir ---------

declare
v_deptno number :=10;
cursor c_emp_cursor is
select last_name,salary,manager_id
from employees 
where department_id =v_deptno
order by salary desc;

begin
for v_record in c_emp_cursor
loop
if
v_record.salary<5000 and v_record.manager_id in(101,124)
then
dbms_output.put_line(v_record.last_name ||'-'||'Due for a raise');
else 
dbms_output.put_line(v_record.last_name ||'-'||'Not Due for a raise');
end if;
end loop;
end;








create table top_salaries(empid number,salary number);

DECLARE
  v_num   NUMBER := 5;
  v_empid employees.employee_id%TYPE;
  v_sal   employees.salary%TYPE;

  CURSOR c_top_salary_cursor IS
    SELECT employee_id, salary
    FROM employees
    ORDER BY salary DESC;
BEGIN
  OPEN c_top_salary_cursor;
  LOOP
    FETCH c_top_salary_cursor INTO v_empid, v_sal;
    EXIT WHEN c_top_salary_cursor%NOTFOUND OR c_top_salary_cursor%ROWCOUNT > v_num;

    INSERT INTO top_salaries(empid, salary)
    VALUES (v_empid, v_sal);
  END LOOP;
  CLOSE c_top_salary_cursor;
END;
/


--book-----

-- cha_5
begin
insert into employees()
values();
end;
/
begin
update employees
set column=value
where r.column= value;
end;
/
begin
delete from employees
where column= value;
end;
/
begin
merge into target_tabel
using source_table 
on(reference.source_table column=reference.targert_table column)
when matched then
update set 
targert_table.column=source_table.column
when not matched then
insert values
source_table column;
end;
/

--cha_6
declare
v_num number:=7;
begin
if 
mod(v_num,2)=0 then
dbms_output.put_line('even');
else
dbms_output.put_line('odd');
end if;
end;
/

-- insert by basic loop 
declare
v_countryid locations.country_id%type :='CA';
v_loc_id locations.location_id%type ;
v_new_city locations.city%type :='Montreal';
v_counter number := 1;
begin
select max(location_id) into v_loc_id from locations
where country_id=v_countryid;
loop
insert into locations(location_id,city,country_id)
values(v_loc_id+v_counter,v_new_city,v_countryid);
v_counter:=v_counter+1;
exit when v_counter>3;
end loop;
end;
/

-- insert by while loop 

declare
v_countryid locations.country_id%type :='CA';
v_loc_id locations.location_id%type ;
v_new_city locations.city%type :='Montreal';
v_counter number := 1;
begin
select max(location_id) into v_loc_id from locations
where country_id=v_countryid;

while  v_counter<=3 
loop
insert into locations(location_id,city,country_id)
values(v_loc_id+v_counter,v_new_city,v_countryid);
v_counter:=v_counter+1;
end loop;
end;
/
-- insert by for loop 

declare
v_countryid locations.country_id%type :='CA';
v_loc_id locations.location_id%type ;
v_new_city locations.city%type :='Montreal';

begin
select max(location_id) into v_loc_id from locations
where country_id=v_countryid;
for i in 1..3
loop
insert into locations(location_id,city,country_id)
values(v_loc_id+i,v_new_city,v_countryid);
end loop;
end;
/

-- cha_8 

-- cursor with basic loop 

declare
cursor c_emp_cursor is
select employee_id,last_name from employees
where department_id=30;
v_empno employees.employee_id%type;
v_lname employees.last_name%type;
begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_empno,v_lname;
exit when c_emp_cursor%notfound;
dbms_output.put_line(v_empno||' '||v_lname);
end loop;
close c_emp_cursor;

end;
/


-- cursor with basic loop and %rowcound and %notfound
declare
cursor c_emp_cursor is
select employee_id,last_name from employees
where department_id=30;
v_empno employees.employee_id%type;
v_lname employees.last_name%type;
begin
open c_emp_cursor;
loop
fetch c_emp_cursor into v_empno,v_lname;
exit when c_emp_cursor%rowcount>10 or c_emp_cursor%notfound;
dbms_output.put_line(v_empno||' '||v_lname);
end loop;
close c_emp_cursor;

end;
/
-- cursor with for loop 

declare
cursor c_emp_cursor is
select employee_id,last_name from employees
where department_id=30;
begin
for v_emp_record in c_emp_cursor
loop
dbms_output.put_line(v_emp_record.employee_id||' '||v_emp_record.last_name);
end loop;
end;
/
-- cursor with for loop and with rowtype%

declare
cursor c_emp_cursor is
select employee_id,last_name from employees
where department_id=30;
v_emp_record c_emp_cursor%rowtype;
begin
for v_emp_record in c_emp_cursor
loop
dbms_output.put_line(v_emp_record.employee_id||' '||v_emp_record.last_name);
end loop;
end;
/