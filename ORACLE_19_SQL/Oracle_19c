
-- conn hr/hr@localhost:1521/orclpdb66.mshome.net   

select last_name,hire_date
from employees 
where department_id=(
    select department_id
    from employees 
    where upper(last_name)=upper('&enter_name')
    )
    and upper(last_name)<>upper('&enter_name');


CREATE TABLE D_EMPLOYEES(
    employee_id   number,
    last_name     varchar2(100) not null,
    email         varchar2(100),
    salary        number,
    commission_pct number(2,2),
    hire_date       date not null,
    department_id number,
    constraint emp_emp_dept_fk foreign key (department_id) references departments(department_id),constraint emp_emp_dept_uk unique(email)
);


create table teach_emp(
    empno       number(5) primary key,
    ename       varchar2(100) not null,
    job         varchar2(100),
    mgr         number(5),
    hiredate    date default sysdate,
    photo       blob,
    salary      number(7,2),
    deptno      number(3) not null constraint admin_dept_fkey references departments(department_id)

);


create table dept80
 as
 select employee_id,last_name,salary*12 annsal,hire_date from employees where department_id=80; 






SELECT last_name, hire_date 
FROM employees 
WHERE department_id = (
    SELECT department_id 
    FROM employees 
    WHERE UPPER(last_name) = UPPER('zlotkey')
)
AND UPPER(last_name) <> UPPER('zlotkey');


-- multiple column comparisons 

-- 1.pariwise comparisions
-- 2.nonpariwise comparisions

-- 1.pariwise comparisions
select first_name,last_name,manager_id,department_id 
from employees
where (manager_id ,department_id)
in
(
    SELECT manager_id, department_id
    FROM employees
    WHERE first_name = 'Daniel'
);

-- 2.nonpariwise comparisions
select first_name,last_name,manager_id,department_id 
from employees
where manager_id 
in
(select manager_id from employees 
where first_name='Daniel'
)
and department_id 
in(
select department_id from employees where first_name='Daniel'
);






select employee_id, last_name, salary  
from employees 
where department_id in (
    select department_id 
    from employees 
    where last_name like '%u%'
    ) 
    and salary >(select avg(salary) from employees);


select employee_id, last_name, salary  
from employees 
where salary > (select avg(salary) from employees)
    and department_id in (
    select department_id 
    from employees 
    where last_name like '%u%'
    ) ;








select last_name, job_id, salary 
from employees 
where job_id=(
    select job_id from employees where last_name='Taylor'
    )
    and salary>(
        select salary 
        from employees 
        where last_name ='Taylor'
        );



select e.last_name,e.job_id,e.department_id,d.department_name from employees e join departments d on (e.department_id=d.department_id) join locations l using(location_id) where l.city='Toronto';


select e.last_name,e.employee_id,m.last_name,m.employee_id from employees e join employees m on(e.manager_id=m.employee_id);



 select  e.last_name, e.hire_date from employees e join  employees davies on(davies.last_name='Davies') where davies.hire_date<e.hire_date;


 select last_name,hire_date from employees where hire_date>(select hire_date from employees where last_name='Davies')




 select e.last_name,e.hire_date,m.last_name,m.hire_date from employees e join employees m on (e.manager_id=m.employee_id) where m.hire_date<e.hire_date;





 select last_name, hire_date from employees where department_id in(select department_id from employees where last_name= '&last_name') and last_name<>'&last_name';

select employee_id, last_name,salary from employees where salary >(select avg(salary) from employees) order by salary;


select employee_id,last_name from employees where department_id in(select department_id from employees where last_name like'%u%');


select last_name,department_id,job_id from employees where department_id in( select department_id from departments where location_id=1700);

select last_name,salary from employees where manager_id in(select employee_id from employees where last_name='King');

select department_id,last_name,job_id from employees where department_id in (select department_id from departments where department_name='Executive');

select last_name from employees where salary > any(select salary from employees where department_id= 60);


select last_name from employees where department_id in(select department_id from employees where last_name like '%u%')and salary> (select avg(salary)from employees);



select job_id,count(job_id) from employees where job_id ='&job_id' group by job_id ;

SELECT count(DISTINCT manager_id) FROM employees;

SELECT MAX(SALARY)-MIN(SALARY) FROM EMPLOYEES;

SELECT MANAGER_ID, MIN(SALARY) FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL group by MANAGER_ID HAVING MIN(SALARY)>6000 ORDER BY MIN(SALARY); 

SELECT count(*) TOTAL, SUM(DECODE(TO_CHAR(hire_date,'YYYY'),'2005',1,0)) "2005",
                       SUM(DECODE(TO_CHAR(hire_date,'YYYY'),'2006',1,0)) "2006",
                       SUM(DECODE(TO_CHAR(hire_date,'YYYY'),'2007',1,0)) "2007",
                       SUM(DECODE(TO_CHAR(hire_date,'YYYY'),'2008',1,0)) "2008"
FROM EMPLOYEES;


SELECT count(*) TOTAL, SUM(CASE WHEN TO_CHAR(hire_date,'YYYY') ='2005' THEN 1 ELSE 0 END) "2005",
                       SUM(CASE WHEN TO_CHAR(hire_date,'YYYY') ='2006' THEN 1 ELSE 0 END) "2006",
                       SUM(CASE WHEN TO_CHAR(hire_date,'YYYY') ='2007' THEN 1 ELSE 0 END) "2007",
                       SUM(CASE WHEN TO_CHAR(hire_date,'YYYY') ='2008' THEN 1 ELSE 0 END) "2008"
FROM EMPLOYEES;



SELECT job_id,  SUM(CASE WHEN department_id=20 THEN SALARY ELSE 0 END),
                SUM(CASE WHEN department_id=50 THEN SALARY ELSE 0 END),
                SUM(CASE WHEN department_id=80 THEN SALARY ELSE 0 END),
                SUM(CASE WHEN department_id=90 THEN SALARY ELSE 0 END)
FROM EMPLOYEES group BY job_id;


SELECT job_id, SUM(DECODE (department_id,20,SALARY)),               
               SUM(DECODE (department_id,50,SALARY)),               
               SUM(DECODE (department_id,80,SALARY)),              
               SUM(DECODE (department_id,90,SALARY)),
               SUM(SALARY)
FROM EMPLOYEES group BY job_id;        



SELECT e.last_name,e.job_id,e.department_id,d.department_name FROM EMPLOYEES e join departments d on (e.department_id=d.department_id) join locations l using (location_id) WHERE l.city='Toronto';
               
select w.last_name,w.employee_id,m.last_name,m.employee_id from employees w join employees m on (w.manager_id=m.employee_id); 
select w.last_name,w.employee_id,m.last_name,m.employee_id from employees w left outer join employees m on (w.manager_id=m.employee_id); 


select e.department_id,e.last_name,c.last_name from employees e join employees c on (e.employee_id=c.employee_id) where e.employee_id<>c.employee_id;


select e.last_name,e.hire_date from employees e join employees davies on(davies.last_name='Davies') where davies.hire_date<e.hire_date;

select last_name,hire_date from employees where hire_date >(select hire_date from employees where last_name= 'Davies');

select e.last_name,e.hire_date,m.last_name,m.hire_date from employees e join employees m on(e.manager_id=m.employee_id)where e.hire_date<m.hire_date;



select last_name,e.job_id,e.department_id from employees e join departments d on(e.department_id=d.department_id) join locations l using(location_id) where l.city='Toronto'; 
 

 select last_name,lpad(salary,15,'$') from employees;

 select last_name,nvl(to_char(commission_pct),'No Commission') from employees;

 select last_name,hire_date from employees where hire_date>(select hire_date from employees where last_name='Davies');
 select e.last_name,e.hire_date from employees e join employees davies on(davies.last_name='Davies') where e.hire_date>davies.hire_date;

 select employee_id,last_name from employees where salary>(select avg(salary) from employees);

 select last_name,salary from employees where salary between 5000 and 12000 and department_id in(20,50);

 select last_name,department_id,job_id from employees where department_id in(select department_id from departments where location_id=1700);


 select last_name,department_id,job_id from employees where department_id in(select department_id from departments where location_id=1700);

 select last_name,hire_date,salary from employees where (salary,nvl(commission_pct,0))in(select salary,nvl(commission_pct,0) from employees where last_name='Kochhar') and last_name<>'Kochhar';

select last_name,hire_date,salary from employees where salary,nvl(commission_pct,0) in(select last_name,nvl(commission_pct,0) from employees where last_name ='Kochhar') and last_name<>'Kochhar';




select e.last_name,e.hire_date,m.last_name,m.hire_date from employees e join employees m on (e.manager_id=m.employee_id) where m.hire_date<e.hire_date;





select e.last_name,e.hire_date,m.last_name,m.hire_date from employees e join employees m on (e.manager_id=m.employee_id) where m.hire_date<e.hire_date;





--  select last_name, hire_date from employees where department_id in(select department_id from employees where last_name= '&last_name') and last_name<>'&last_name';

-- select employee_id, last_name,salary from employees where salary >(select avg(salary) from employees) order by salary;


-- select employee_id,last_name from employees where department_id in(select department_id from employees where last_name like'%u%');


-- select last_name,department_id,job_id from employees where department_id in( select department_id from departments where location_id=1700);

-- select last_name,salary from employees where manager_id in(select employee_id from employees where last_name='King');

-- select department_id,last_name,job_id from employees where department_id in (select department_id from departments where department_name='Executive');

-- select last_name from employees where salary > any(select salary from employees where department_id= 60);


-- 
-- select employee_id,last_name,salary from employees where department_id in(select department_id from employees where last_name like '%u%') and salary>(select avg(salary) from employees);



-- select last_name,hire_date from employees where department_id in (select department_id from employees where last_name='&lastName' ) and last_name<>'&lastName';

-- select employee_id,last_name,salary from employees where salary > (select avg(salary) from employees);


-- select employee_id,last_name from employees where department_id in(select department_id from employees where last_name like '%u%');



-- select last_name,department_id,job_id from employees where department_id in(select department_id from departments where location_id=1700);

-- select e.last_name,e.department_id,e.job_id from employees e join departments d on (e.department_id=d.department_id) where d.location_id=1700;

-- select last_name,department_id,job_id from employees e join departments d using (department_id) where d.location_id=1700;


-- select last_name , salary from employees where manager_id in(select employee_id from employees where last_name='King');


-- select last_name,salary from employees where manager_id in (select employee_id from employees where last_name='King');


-- select department_id,last_name,job_id from employees where department_id in(select department_id from departments where department_name='Executive');

-- select department_id,last_name,job_id from employees where department_id in(select department_id from departments where department_name='Executive');

-- select last_name from employees where salary> any(select salary from employees where department_id=60);


-- select last_name from employees where salary > any (select salary from employees where department_id=60);




select employee_id,last_name,salary from employees where department_id in(select department_id from employees where last_name like '%u%') and salary>(select avg(salary) from employees);


select employee_id,last_name,salary from employees where department_id in(select department_id from employees where last_name like '%u%') and salary> (select avg(salary) from employees);


select last_name,employee_id,salary from employees where salary>(select avg(salary) from employees);

select employee_id,last_name from employees where department_id in (select department_id from employees where last_name like '%u%');

select last_name,department_id,job_id from employees where department_id in(select department_id from departments where location_id=1700);

select last_name,salary from employees where manager_id in (select employee_id from employees where last_name ='King');


select department_id,last_name,job_id from employees where department_id in(select department_id from departments where department_name='Executive');

select employee_id from employees where salary >any(select avg(salary) from employees where department_id=60);

select employee_id,last_name,salary from employees where department_id in(select department_id from employees where last_name like'%u%') and salary>(select avg(salary) from employees);

-- select e.last_name,e.department_id,e.job_id,d.department_name from employees e join departments d on (e.department_id=d.department_id) join locations  l using(location_id) where l.city='Toronto';



-- SELECT e.last_name,e.job_id,e.department_id,d.department_name FROM EMPLOYEES e join departments d on (e.department_id=d.department_id) join locations l using (location_id) WHERE l.city='Toronto';
               
-- select w.last_name,w.employee_id,m.last_name,m.employee_id from employees w join employees m on (w.manager_id=m.employee_id); 
-- select w.last_name,w.employee_id,m.last_name,m.employee_id from employees w left outer join employees m on (w.manager_id=m.employee_id); 


-- select e.department_id,e.last_name,c.last_name from employees e join employees c on (e.employee_id=c.employee_id) where e.employee_id<>c.employee_id;


-- select e.last_name,e.hire_date from employees e join employees davies on(davies.last_name='Davies') where davies.hire_date<e.hire_date;

-- select last_name,hire_date from employees where hire_date >(select hire_date from employees where last_name= 'Davies');

-- select e.last_name,e.hire_date,m.last_name,m.hire_date from employees e join employees m on(e.manager_id=m.employee_id)where e.hire_date<m.hire_date;



-- select last_name,e.job_id,e.department_id from employees e join departments d on(e.department_id=d.department_id) join locations l using(location_id) where l.city='Toronto'; 
 


select e.employee_id,e.last_name, m.employee_id,m.last_name from employees e join employees m on(e.manager_id=m.employee_id);

 select e.last_name,e.department_id,c.last_name from employees e join employees c on (e.department_id=c.department_id) and e.employee_id<>c.employee_id;

 select last_name,hire_date from employees where hire_date>(select hire_date from employees where last_name='Davies');


 select e.last_name,e.hire_date ,m.last_name,m.hire_date from employees e join employees m on(e.manager_id=m.employee_id) where e.hire_date <m.hire_date;


 select e.employee_id,e.last_name,m.employee_id,m.last_name from employees e join employees m on(e.manager_id=m.employee_id) where e.hire_date<m.hire_date;


 select job_id,count(*) from employees where job_id='&id' group by job_id;

 select count( DISTINCT manager_id) from employees ;



 select count(distinct manager_id) FROM employees;

 select manager_id,min(salary) from employees where manager_id is not null group by manager_id HAVING min(salary)>6000 ;




 select manager_id,min(salary) from employees  where manager_id is not null group by manager_id HAVING min(salary)>6000;



 select count(*),sum(decode(to_char(hire_date,'yyyy'),2005,1,0)) "2005" from employees;

 select job_id, sum(decode(department_id,20,salary)) "dp20" ,sum(salary) from employees group by job_id;


 select last_name,length(last_name) from employees where last_name like'J%';



 select last_name,months_between(sysdate,hire_date) from employees;


 select last_name, lpad(salary,15,'$') from employees;

 select last_name,trunc((sysdate-hire_date)/7) from employees where department_id=70;


 select last_name, salary from employees where salary not between 5000 and 12000;


 select last_name,job_id from employees where manager_id is null;

 select employee_id,last_name,salary,department_id from employees where manager_id='&manager_id' and order by &column;


 select employee_id,last_name,salary,department_id from employees where manager_id=&manager_id order by &column;

 select last_name,job_id,salary from employees where job_id in('SA_REP','ST_CLERK');






--  sql_part_2------------------

insert into departments(department_id,department_name,manager_id,location_id)
values (280,'Public Relations',100,1700);

-- insert null values implicit method
insert into departments (department_id,department_name)
values(290,'Purchasing');
-- insert null values explicit method

insert into departments
values(300,'Finance',null,null);
  
-- insert special values 
insert into employees (employee_id,first_name, last_name,email, phone_number,hire_date,job_id,salary,commission_pct,manager_id,department_id)
values(207,'Bouis', 'Bopp','BPOPP', '515.124.4567',current_date, 'AC_ACCOUNT', 6900,null, 205,110);


-- insert SPECIFIC DATE AND  TIME VALUES 
insert INTO EMPLOYEES
VALUES (208,'Dden','Raphealy','DDRAPHEAL','515.127.4561',TO_DATE('FEB 3, 2025', 'MON DD, YYYY'),'SA_REP',11000,.2,100,60);


-- CREATE SCRIPT

insert into departmentS (department_id,department_name,location_id)
values(&department_id,'&department_name',&location_id);


-- COPING ROWS FROM ANOTHER TABLE

insert INTO SALES_REPS(ID,NAME,SALARY,commission_pct)
SELECT employee_id,last_name,SALARY,commission_pct FROM EMPLOYEES WHERE job_id LIKE 'REP%';




-- UPDATE ROW 

UPDATE EMPLOYEES SET job_id='IT_PROG', commission_pct=NULL
WHERE employee_id=114;


UPDATE EMPLOYEES SET (job_id,SALARY)=(SELECT job_id,SALARY FROM EMPLOYEES WHERE employee_id=205) WHERE employee_id=103;

UPDATE EMPLOYEES 
SET job_id=(SELECT job_id FROM EMPLOYEES WHERE employee_id=205),
    SALARY=(SELECT SALARY FROM EMPLOYEES WHERE employee_id=205)
    WHERE employee_id =103;

UPDATE COPY_EMP 
SET department_id =(SELECT department_id FROM EMPLOYEES WHERE employee_id=100)
    WHERE job_id=(SELECT job_id FROM EMPLOYEES WHERE employee_id=200);



-- DELETE ROW FROM TABLE
DELETE FROM departments WHERE department_name='Finance';_____?
select * FROM departments WHERE department_name='Finance';_____?

DELETE from employees where employee_id=114;
DELETE from departments where department_id in(30,40);

DELETE from employees where department_id in (select department_id from departmentS where department_name like '%Public%');


-- truncate 
truncate table employees;


-- practice ____ 9


select department_id 
from departments minus 
select department_id 
from employees 
where job_id='ST_CLERK';



select country_id, country_name 
from countries minus 
select l.country_id,c.country_name
from locations l 
join countries c 
on (l.country_id= c.country_id) 
join departments d 
on d.location_id=l. location_id; 


select employee_id,job_id,department_id 
from employees
where department_id=50
union all
select employee_id,job_id,department_id
from employees
where department_id =80;


select employee_id 
from employees
where job_id ='SA_REP'
intersect
select employee_id
from employees
where department_id=80;


select last_name, department_id,to_char(null)department_name
from employees
union
select to_char(null), department_id,department_name 
from departments;





-- practice ____ 10


create table my_employee ( id number(5) constraint my_employee_id_pk primary key,
                           last_name varchar2(100),
                           first_name varchar2(100),
                           userid varchar2 (100),
                           salary number (9,2) );


 insert into my_employee 
 values(1,
        'Patel',
        'Ralph',
        'rpatel',
        895);                      

 insert into my_employee (
                          id,
                          last_name,
                          first_name,
                          userid,
                          salary
 )    
 values(2,
        'Dancs',
        'Betty',
        'bdancs',
        860);


insert into my_employee (
                          id,
                          last_name,
                          first_name,
                          userid,
                          salary
 )    
 values(&id,
        '&last_name',
        '&first_name',
        '&userid',
        &salary);    

 select * from my_employee;




 commit;



 update my_employee
    set last_name ='Drexler'
    where id=3;                          


 update my_employee
    set salary=1000
    where salary<900;   


 select * from my_employee;


 delete from my_employee  
 where last_name='Dancs' ; 


 select * from my_employee;



 insert into my_employee (
                          id,
                          last_name,
                          first_name,
                          userid,
                          salary
 )    
 values(&id,
        '&last_name',
        '&first_name',
        '&userid',
        &salary);    

savepoint step_17;

delete from my_employee;




 select * from my_employee;


  rollback to step_17;     


   select * from my_employee;

   commit;  



   -- practice ____ 11

   create table dept (
                    id number (7) constraint department_id_pk primary key ,
                    name varchar2 (25)
   );


create table emp(
    id          number(7),
    last_name   varchar2(25),
    first_name  varchar2(25),
    dept_id     number(7),
    constraint emp_dept_id_fk foreign key (id) references dept (id)
);


alter table emp
add (commission number(2,2));

alter table emp
  2 modify (last_name varchar2(50));


alter table emp 
drop (first_name);
/
alter table emp 
drop column first_name;




alter table emp
set unused (dept_id);

alter table emp 
drop unused column;



create table employees2
 as 
 select employee_id id,
 first_name,
 last_name,
 salary,
 department_id dept_id
 from employees ;


 alter table employees2
 read only;


alter table employees2 
add job_id varchar2 (9);

alter table employees2
read write ;

commit;


-- sequence 

create sequence dept_deptid_seq
                start with 280
                increment by 10
                maxvalue 9999
                minvalue 280
                nocache
                nocycle;

select dept_deptid_seq.nextval from dual;
select dept_deptid_seq.currval from dual;


insert into departments(
    department_id,department_name,location_id
)
values(dept_deptid_seq.nextval,'Support', 2500);

select dept_deptid_seq.currval from dual;
select dept_deptid_seq.nextval from dual;
select dept_deptid_seq.currval from departments;




insert into employees (
    employee_id,
    department_id,
    last_name,email,hire_date,job_id
)
values (employees_seq.nextval,dept_deptid_seq.currval,'babu','bbabu',sysdate, 'IT_PROG');


alter sequence dept_deptid_seq 
increment by 30
maxvalue 10000
nocache
nocycle;




-- synonyms

create Public SYNONYM emp for employees;
create public SYNONYM d_sum for dept_sum_vu;
create Public synonym dept for alice.departments;
create        SYNONYM emp for hr.employees;
grant select on hr.employees to biplob;
select * from emp;
drop SYNONYM emp;
select * from d_sum;

select * from user_synonyms;
desc user_synonyms



-- indexes 


create index emp_last_name_idx on employees (last_name);


create table new_emp(
    employee_id number(6)
    primary key using index (create index emp_id_idx on NEW_EMP(employee_id)),
    first_name varchar2 (20),
    last_name varchar2 (20)
);

select index_name,table_name 
from user_idexes
where table_name='new_emp';

SELECT index_name, table_name, owner
FROM all_indexes
WHERE table_name = 'NEW_EMP';


-- constraint department_id_pk primary key
create table emp_unnamed_index(
    employee_id number(6) constraint employee_id_pk primary key,
    first_name varchar2(30),
    last_name varchar2(30)
);

select index_name,table_name
From user_indexes 
where table_name='emp_unnamed_index';

SELECT index_name, table_name
FROM user_indexes
WHERE index_name = 'EMP_UNNAMED_INDEX';

step -1
create the table:

create table new_emp5(
    employee_id number (5),
    first_name varchar2(30),
    last_name varchar2(30)
);

step-2
create the index :

create index emp_id_idx2 on new_emp2(employee_id);


step-3

create the primary key :

alter table new_emp2 add primary key (employee_id) using index emp_id_idx2;

desc user_indexes
desc user_ind_columns


drop index emp_last_name_idx;



-- view---

-- create view
create view empvu80
as select employee_id,last_name,salary from employees where department_id=80;

create view salvu50
as select employee_id id_number,last_name name,salary*12 ann_salary from employees where department_id=50;


create or replace view salvu50(
    id_number,name,ann_salary) as select employee_id id_number,last_name name,salary*12 ann_salary from employees where department_id=50;



    -- modify view ---or replace

create or replace view empvu80 (id_number,name,sal,department_id)as select employee_id,first_name ||' '|| last_name,salary,department_id from employees;



-- creat a complex view 

create or replace view dept_sun_vu(name,minsal,maxsal,avgsal) as select d.department_name,min(e.salary),max(salary),avg(salary) from employees e join departments d using (department_id) group by d.department_name;

-- using the with check option clause

create or replace view empvu20 as select * from employees where department_id=20 with check option constraint empvu20_ck;



-- denying dml operations by with read only clause 

create or replace view empvu10 (employee_id,employee_name,job_title)as select employee_id,last_name,job_id from employees where department_id=10 with read only;

drop view empvu80;




insert into new_emp5(
    employee_id,
    first_name,
    last_name
)
values(1,'a','aa'),
      (2,'b','cc');
-- sql_part_2____practict_solution_2_chapter_3



create table dept2 (
    id number(7) primary key,
    last_name varchar2(25) ,
    hire_date date
);


create sequence dept2_id_seq
    start with 200
    maxvalue 1000
    increment by 10;


insert into dept2(id,last_name,hire_date) values(dept2_id_seq.nextval,'&last_name',to_date('&hire_date','mon/dd/yyyy'));



select sequence_name,max_value,increment_by,last_number from user_sequences;
select * from user_sequences;


create synonym emp1 for employees;
select * from user_synonyms;


drop synonym emp1;


create index dept2_name_idx on  dept2 (last_name);


create table sales_dept (team_id number(3) primary key using index (create index sales_pk_idx on sales_dept(team_id)), location varchar2(30));


select index_name,table_name,uniqueness from user_indexes where table_name= 'SALES_DEPT';


drop table dept2;
drop table sales_dept;
drop sequence dept2_id_seq;



-- sql_part_2____practict_solution_2_chapter_4


create or replace view employee_vu as select employee_id,last_name employee, department_id from employees;
select * from employee_vu;


select employee,department_id from employee_vu;

create view dept80 as select employee_id empno, last_name employee,department_id deptno from employees where department_id=80
with check option constraint emp_dept_80;


desc  dept80;

select * from dept80;
update dept80 set deptno=50
where employee='Abel';


select view_name,text from user_views;

 

drop view employee_vu;
drop view dept80;
drop view dept50;









-- sql_part_2____practict_solution_2_chapter_5


-- create table dept2 (id number(5),name varchar2(25));

insert into dept2 select department_id,department_name from departments;



create table emp2 (id number (7),last_name varchar2(25), first_name varchar2 (25),dept_id number (7));
 
alter table emp2 
add constraint my_emp_id_pk primary key(id);

alter table dept2 
add constraint my_dept_id_pk primary key(id);

alter table emp2
add constraint my_dept_id_fk foreign key (dept_id) references dept2(id);


alter table emp2 
add commission number(2,2)
constraint my_emp_comm_ck_ check(commission>0);

drop table emp2 purge;
drop table dept2 purge;



create table library_items_ext(category_id number(12),
                                book_id number(6),
                                book_price number(6,2),
                                quantity number(8)
                               )
organization external(type orcale_loader
                      default directory emp_dir
                      access parameters(
                      records delimited by newline
                      fields terminated by ',')
                      location('library_items.dat')
                    )   
reject limit unlimited;            




-- all step for external table in sqlplus
 sys as sysdba
 s
 CREATE OR REPLACE DIRECTORY emp_dir AS 'C:\Oracle_data\';

  SELECT username FROM dba_users;

   GRANT READ, WRITE ON DIRECTORY emp_dir TO sys;
   




   CREATE TABLE library_items_ext2(
    category_id   NUMBER(12),
    book_id       NUMBER(6),
    book_price    NUMBER(6,2),
    quantity      NUMBER(8)
)
ORGANIZATION EXTERNAL (
    TYPE ORACLE_LOADER
    DEFAULT DIRECTORY emp_dir
    ACCESS PARAMETERS (
        RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ','
        MISSING FIELD VALUES ARE NULL
        (
            category_id,
            book_id,
            book_price,
            quantity
        )
    )
    LOCATION ('emp_dir.dat')
)
REJECT LIMIT UNLIMITED;

SELECT * FROM library_items_ext;




-- temporary table 

create global temporary table cart (
    order_id   NUMBER,
    customer   VARCHAR2(100)
)
ON COMMIT DELETE ROWS;


-- activity guide 1 ____ 

-- chapter- 9 practice 

select department_id from departments minus select department_id from employees where job_id= 'ST_CLERK';



SELECT country_id,country_name 
FROM countries 
minus
SELECT l.country_id,c.country_name from locations l join countries c on(l.country_id=c.country_id) join  departments d on (d.location_id=l.location_id);


select employee_id,job_id, department_id from employees where department_id =50 union all
select employee_id,job_id, department_id from employees where department_id=80;


select employee_id from employees where job_id='SA_REP' intersect select employee_id from employees where department_id =80;
-- OR 
SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE JOB_ID='SA_REP' AND DEPARTMENT_ID=80;
-- OR 
SELECT employee_id
FROM employees
WHERE employee_id IN (
    SELECT employee_id 
    FROM employees 
    WHERE job_id = 'SA_REP'
)
AND department_id = 80;
-- OR 
SELECT employee_id
FROM employees
WHERE job_id = 'SA_REP'
AND employee_id IN (
    SELECT employee_id
    FROM employees
    WHERE department_id = 80
);


select last_name, department_id,to_char(null) dept_name from employees
union 
select to_char(null),department_id , department_name from departments;

SELECT LAST_NAME , DEPARTMENT_ID , TO_CHAR(NULL) DEPT_NAME FROM EMPLOYEES 
UNION
SELECT TO_CHAR(NULL), DEPARTMENT_ID,DEPARTMENT_NAME FROM DEPARTMENTS;

SELECT E.LAST_NAME,E.DEPARTMENT_ID,D.DEPARTMENT_NAME
FROM EMPLOYEES E 
FULL OUTER JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;


-- chapter- 10 practice 


create table my_employee(
    id number (4),
    last_name varchar2 (25),
    first_name varchar2 (25),
    userid varchar2 (8),
    salary number (9,2),
    hire_date date
);


desc my_employee;

alter table my_employee constraint emp_id_pk primary key (id);

create sequence emp_id_sq 
    start with 100
    increment by 1
    maxvalue 100000
    minvalue 100
    nocache
    nocycle
;

desc user_sequences
drop sequence emp_id_sq

insert into my_employee 
values(emp_id_sq.nextval ,'Patel','Ralph','rpatel',895,sysdate);


select * from my_employee;

-- explicit insert 
insert into my_employee 
(id,last_name,first_name,userid,salary,hire_date)
values(emp_id_sq.nextval, 'Dancs', 'Betty',lower(substr('Dancs',1,1)||substr('Betty' ,1,7)),860,to_date('12/jan/05' ,'dd/mon/rr'));

-- dynamic insert 

insert into my_employee 
values(emp_id_sq.nextval ,'&last_name','&first_name','&userid',&salary, TO_DATE(SYSDATE));

insert into my_employee 
values(emp_id_sq.nextval ,'&last_name','&first_name','&userid',&salary, TO_DATE('&hire_date', 'YYYY-MM-DD'));


commit;


create synonym emp_synonym for my_employee;

desc user_synonyms
drop synonym emp_synonym;

create view emp_vw_100 as select id,userid,salary,hire_date from my_employee where id=100;
create or replace view emp_vw_1 as select id,userid,salary,hire_date from my_employee where id=100;
create or replace view emp_vw_1 as select id,userid,salary,hire_date from my_employee where id=100 with read only;
create or replace view emp_vw_1 as select * from my_employee where id=100 with check option constraint empvw100_ck;
select * from emp_vw_100;
drop view emp_vw_100; 

create index emp_salar_idx100 on my_employee(salary);
desc user_idexes
drop index emp_salar_idx100;

-- update 
update my_employee set last_name='Drexler' where id=103;

update my_employee set salary =1000 where salary<900;

select * from my_employee;

delete from my_employee where last_name ='Dancs';

commit;
insert into my_employee 
values(emp_id_sq.nextval ,'&last_name','&first_name','&userid',&salary, TO_DATE(SYSDATE));


select * from my_employee;
savepint step_17;
delete from my_employee;
select * from my_employee;
rollback to step_17;
commit;



insert into my_employee 
values(emp_id_sq.nextval, '&last_name', '&first_naem',lower(substr('&first_naem',1,1)||substr('&last_name' ,1,7)),&salary,to_date('&hire_date' ,'dd/mon/rr'));



select * from my_employee where id=107;


-- chapter- 11 practice


create table dept (id number(7) constraint dept_id_new_pk primary key ,name varchar2(25));
desc dept



CREATE TABLE emp01 (
  id NUMBER(7),
  last_name VARCHAR2(25),
  first_name VARCHAR2(25),
  dept_id NUMBER(7),
  CONSTRAINT dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept(id)
);

create table emp6(id number(7), last_name varchar2(25), first_name varchar2(25), dept_id number(7), 
constraint emp_dept_id_fk foreign key (dept_id)  references dept(id));

create table emp(id number(7), last_name varchar2(25), first_name varchar2(25), dept_id number(7), 
constraint dept_id_fk  references dept(id));

alter table emp01 
add commission number(2,2);
desc emp01

alter table emp01 
modify last_name varchar2 (50);
desc emp01

alter table emp01
drop column first_name;
desc emp01


alter table emp01
set unused(dept_id);
desc emp01

alter table emp01
drop unused columns;
desc emp01



create table employees02 as select employee_id id,first_name,last_name,salary,department_id dept_id from employees;
desc employees02

alter table employees02 read only;



alter table employees02 
add job_id varchar2(9);
desc employees02

alter table employees02 read write;
alter table employees02
add job_id varchar2(9);



drop table emp;

drop table dept cascade constraints purge;
drop table employees2;


-- multiple column subqueries 
-- 1.pariwise
-- 2.nonpariwise
create table emp_column_comparisons_test(first_name varchar2(100),manager_id number,department_id number);

insert into emp_column_comparisons_test
   values('Daniel',108, 100);

insert into emp_column_comparisons_test
    values('Daniel',109, 200);  

 insert into emp_column_comparisons_test
    values('Bob',108, 200);

 insert into emp_column_comparisons_test
    values('Alice',109, 100); 


-- 2.nonpariwise

SELECT first_name, manager_id, department_id
  FROM emp_column_comparisons_test
 WHERE     manager_id IN (SELECT manager_id
                            FROM emp_column_comparisons_test
                           WHERE first_name = 'Daniel')
       AND department_id IN (SELECT department_id
                               FROM emp_column_comparisons_test
                              WHERE first_name = 'Daniel');


--  1.pariwise

SELECT first_name, manager_id, department_id
FROM emp_column_comparisons_test
WHERE (manager_id, department_id) IN (
    SELECT manager_id, department_id
    FROM emp_column_comparisons_test
    WHERE first_name = 'Daniel'
);


-- scalar subqueries
-- when need only one column result 


select employee_id,last_name,department_id, (CASE
                                when department_id=(select department_id from departments where location_id=1800)
                                then 'Dhaka'
                                else 'Rajshahi'
                                end
) location 
from employees;


select department_id,department_name,(
    select count(*)
    from employees e 
    where  e.department_id=d.department_id
) as emp_cout from departments d;


-- correlated subqueries 
-- Compare each row in a table to a value that depends on that same row.


-- emloyee salay more then avg salary of each department 
SELECT outer_e.employee_id, outer_e.last_name, outer_e.salary
FROM employees outer_e
WHERE outer_e.salary > (
    SELECT AVG(inner_e.salary)
    FROM employees inner_e
    WHERE outer_e.department_id = inner_e.department_id
);

-- employee highest salary of each department 
 
select outer_e.employee_id,outer_e.last_name,outer_e.salary 
from employees outer_e
where salary=(
    select max(salary)
    from employees inner_e 
    where outer_e.department_id=inner_e.department_id);


-- exists or not exists operator 

select employee_id,last_name,job_id,department_id
from employees outer_e
where exists(select null 
from employees 
where manager_id=outer_e.employee_id);



SELECT employee_id, last_name, job_id, department_id
FROM employees outer_e
WHERE NOT EXISTS (
    SELECT 1
    FROM employees
    WHERE manager_id = outer_e.employee_id
);

-- with cluase 


with top_salary as (select outer_e.employee_id,outer_e.last_name,outer_e.salary 
from employees outer_e
where salary=(
    select max(salary)
    from employees inner_e 
    where outer_e.department_id=inner_e.department_id)
)
select * from top_salary;





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































 






















