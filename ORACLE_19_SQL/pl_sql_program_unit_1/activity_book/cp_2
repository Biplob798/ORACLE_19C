

1.

create or replace procedure add_job 
(p_job_id in jobs.job_id%type,
p_job_title in jobs.job_title%type)
is
begin
insert into jobs(job_id,job_title)
values(p_job_id,p_job_title);
end;
/

begin
add_job('ST_MAN', 'Stock Manager');
end;
/




2.

create or replace procedure upd_job
(p_job_id in jobs.job_id%type, 
p_new_title in jobs.job_title%type)
is
begin
update jobs
set  job_title=p_new_title
where job_id=p_job_id;
if sql%notfound then
raise_application_error(-20202,('NO job update.'));
end if;
end;
/

begin
upd_job('IT_DBA','Data Administrator');
end;
/

begin
upd_job('IT_WEB','Web Master');
end;

3.

create or replace procedure del_job 
(p_job_id jobs.job_id%type)
is
begin
delete from jobs
where job_id=p_job_id;
IF SQL%NOTFOUND then
raise_application_error(-20203,'NO JOBS DELETED.');
END IF;
end del_job;
/

EXECUTE del_job('IT_DBA');
EXECUTE del_job('IT_WEB');


4.

CREATE OR REPLACE PROCEDURE get_employee
(p_empno in employees.employee_id%type,
p_salary out employees.salary%type,
p_job_id out employees.job_id%type)
is
begin
select salary,job_id into p_salary,p_job_id from employees
where employee_id=p_empno;
end get_employee;
/

-- invoke get_employee  by host variable 

variable b_salary number
variable b_job_id varchar2(50)
execute get_employee(120,:b_salary,:b_job_id);
print b_salary 
print b_job_id


variable b_salary number
variable b_job_id varchar2(50)
execute get_employee(300,:b_salary,:b_job_id);
print b_salary 
print b_job_id



begin

end;
/